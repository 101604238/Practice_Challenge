/*
Deployment script for Practice_Challenge_Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Practice_Challenge_Database"
:setvar DefaultFilePrefix "Practice_Challenge_Database"
:setvar DefaultDataPath "C:\Users\STUDENT\AppData\Local\Microsoft\VisualStudio\SSDT"
:setvar DefaultLogPath "C:\Users\STUDENT\AppData\Local\Microsoft\VisualStudio\SSDT"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating [dbo].[Event]...';


GO
CREATE TABLE [dbo].[Event] (
    [EventID]    INT            NOT NULL,
    [PersonID]   INT            NOT NULL,
    [EventTime]  NVARCHAR (20)  NOT NULL,
    [EventDate]  NVARCHAR (20)  NOT NULL,
    [EventVenue] NVARCHAR (100) NOT NULL,
    PRIMARY KEY CLUSTERED ([EventID] ASC)
);


GO
PRINT N'Creating [dbo].[Person]...';


GO
CREATE TABLE [dbo].[Person] (
    [PersonID]    INT           NOT NULL,
    [PersonFname] NVARCHAR (50) NOT NULL,
    [PersonLname] NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([PersonID] ASC)
);


GO
PRINT N'Creating [dbo].[Fk_PersonID]...';


GO
ALTER TABLE [dbo].[Event] WITH NOCHECK
    ADD CONSTRAINT [Fk_PersonID] FOREIGN KEY ([PersonID]) REFERENCES [dbo].[Person] ([PersonID]);


GO
	delete from [Event];
	delete from [Person];

	insert into Person (PersonID, PersonFname, PersonLname) values
	(1, "James", "Hallinan"),
	(2, "Tim", "Baird"),
	(3, "Anh", "Nguyen");

	insert into Event (EventID, PersonID, EventTime, EventDate, EventVenue) values
	(128, 1, "11:55am", "12-3-2018", "Jitters Coffee Shop"),
	(129, 1, "12:09pm", "13-3-2018", "Jitters Coffee Shop"),
	(130, 2, "11:55pm", "13-3-2018", "Jitters Coffee Shop"),
	(131, 2, "1:12pm", "15-3-2018", "Glenferrie Road Coffee"),
	(132, 3, "1:15pm", "15-3-2018", "Glenferrie Road Coffee");
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Event] WITH CHECK CHECK CONSTRAINT [Fk_PersonID];


GO
PRINT N'Update complete.';


GO
